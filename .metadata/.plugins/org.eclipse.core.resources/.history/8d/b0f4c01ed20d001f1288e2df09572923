package com.ezen.www.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ezen.www.domain.BoardDTO;
import com.ezen.www.domain.BoardVO;
import com.ezen.www.domain.FileVO;
import com.ezen.www.domain.PagingVO;
import com.ezen.www.handler.FileHandler;
import com.ezen.www.handler.PagingHandler;
import com.ezen.www.service.BoardService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RequestMapping("/board/*")
@Controller
@Slf4j
@RequiredArgsConstructor
public class BoardController {

	private final BoardService bsv;
	private final FileHandler fh;

	@GetMapping("/register")
	public void register() {
	}

	@PostMapping("/insert")
	public String insert(BoardVO bvo, @RequestParam(name = "files", required = false)MultipartFile[] files) {
//		log.info(">>>>>bvo객체 확인>>>>>{}",bvo);
		
		List<FileVO> flist = null;
		
		if(files[0].getSize()>0) {
			//파일이 있다면...
			flist = fh.uploadFiles(files);
		}
		
		BoardDTO bdto = new BoardDTO(bvo,flist);
		
		
		int isOk = bsv.insert(bdto);
		
		return "redirect:/board/list";
	}

	@GetMapping("/list")
	public String list(Model m, PagingVO pgvo) {

		log.info(">>>>>PagingVO>>>>>{}", pgvo);

		int totalCount = bsv.getTotal(pgvo);

		log.info(">>>>totalCount Check>>>>>{}", totalCount);

		PagingHandler ph = new PagingHandler(pgvo, totalCount);

		// paging 처리 추가
		List<BoardVO> list = bsv.getList(pgvo);

		m.addAttribute("list", list);
		m.addAttribute("ph", ph);

		return "/board/list";
	}

	@GetMapping({ "/detail", "/modify" })
	public void detail(@RequestParam("bno") int bno, Model m) {

		log.info(">>>detail로 들어오는 bno 확인{}", bno);

		BoardDTO bdto = bsv.getDetail(bno);

		m.addAttribute("bdto", bdto);

	}

	@PostMapping("/modify")
	public String modify(BoardVO bvo, RedirectAttributes re,@RequestParam(name = "files", required = false) MultipartFile[] files) {

		
		List<FileVO> flist = null;
		
		if(files[0].getSize() > 0) {
			flist = fh.uploadFiles(files);
		}
		
		BoardDTO bdto = new BoardDTO(bvo, flist);
		
//		log.info(">>>>bdto확인 >>>>>{}",bdto);
		
		int isOk = bsv.update(bdto);

		
		re.addAttribute("bno", bvo.getBno());

//		return "redirect:/board/detail?bno="+bvo.getBno();

		// 이렇게 redirectAttributes를 이용하여 보내는거도 사용가능
		return "redirect:/board/detail";

	}

	// isdel을 Y로 변경
	@GetMapping("/remove")
	public String remove(@RequestParam("bno") int bno) {

//		log.info(">>>>remove bno Check>>>{}", bno);

		int isOk = bsv.delete(bno);

		return "redirect:/board/list";
	}
	
	@DeleteMapping(value = "/fileRemove/{uuid}", produces =  MediaType.TEXT_PLAIN_VALUE)
	ResponseEntity<String>fileRemove(FileVO fvo){
		
		int isOk = bsv.fileRemove(uuid);
		
		return isOk > 0 ? new ResponseEntity<String>("1",HttpStatus.OK) : 
			new ResponseEntity<String>("0",HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
}
